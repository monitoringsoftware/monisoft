/*
 * ManualEntryPanel.java
 *
 * Created on 19. August 2008, 14:04
 */
package de.jmonitoring.Components;

import de.jmonitoring.utils.DateCalculation.DateFieldEditor;
import com.toedter.calendar.JDateChooser;
import de.jmonitoring.DataHandling.DataHandler;
import de.jmonitoring.base.MainApplication;
import de.jmonitoring.base.Messages;
import de.jmonitoring.base.MoniSoftConstants;
import de.jmonitoring.base.sensors.SensorInformation;
import de.jmonitoring.utils.Measurement;
import java.awt.Color;
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import javax.swing.border.Border;

/**
 *
 * @author togro
 */
public class ManualEntryPanel extends javax.swing.JPanel {

    private boolean isValueValid = false;
    private boolean isDateValid = false;
    private Color paneOKColor = new Color(183, 214, 178);
    private Color paneErrorColor = new Color(214, 178, 178);
    private Color errorColor = new Color(255, 205, 205);
    private Border redLine = BorderFactory.createLineBorder(Color.red, 2);
    private Border greyLine = BorderFactory.createEtchedBorder();
    private double minimumValidEntry;
    private int sensorID;

    /**
     * Creates new form ManualEntryPanel
     */
    public ManualEntryPanel(int id) {
        super();
        sensorID = id;
//        this.gui = gui;
        initComponents();
        dateChooser.getJCalendar().setTodayButtonVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        dateChooser = new JDateChooser(new DateFieldEditor());
        ((DateFieldEditor)dateChooser.getDateEditor()).setBackground(errorColor);
        ((DateFieldEditor)dateChooser.getDateEditor()).setBorder(redLine);
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField1.setBackground(errorColor);
        jPanel4 = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(214, 178, 178));
        setMaximumSize(new java.awt.Dimension(361, 81));
        setMinimumSize(new java.awt.Dimension(361, 81));

        jPanel3.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle"); // NOI18N
        jLabel2.setText(bundle.getString("ManualEntryPanel.jLabel2.text")); // NOI18N

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/jmonitoring/icons/transfervalue.png"))); // NOI18N
        jButton1.setToolTipText(bundle.getString("ManualEntryPanel.jButton1.toolTipText")); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setFocusPainted(false);
        jButton1.setMaximumSize(new java.awt.Dimension(10, 10));
        jButton1.setMinimumSize(new java.awt.Dimension(10, 10));
        jButton1.setPreferredSize(new java.awt.Dimension(10, 10));
        jButton1.setRolloverEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dateChooser.setDateFormatString(bundle.getString("DatePanel.DateFormatString")); // NOI18N
        dateChooser.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        dateChooser.setMaxSelectableDate(new java.util.Date(4070908877000L));
        dateChooser.setMinSelectableDate(new java.util.Date(77000L));
        dateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateChooserPropertyChange(evt);
            }
        });

        jSpinner1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        jSpinner2.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jSpinner3.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel3.setText(bundle.getString("ManualEntryPanel.jLabel3.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel4.setText(bundle.getString("ManualEntryPanel.jLabel4.text")); // NOI18N

        infoLabel.setBackground(new java.awt.Color(237, 236, 236));
        infoLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        infoLabel.setForeground(new java.awt.Color(0, 0, 0));
        infoLabel.setText(bundle.getString("ManualEntryPanel.infoLabel.text")); // NOI18N
        infoLabel.setOpaque(true);

        jFormattedTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red, 2));
        jFormattedTextField1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField1PropertyChange(evt);
            }
        });
        jFormattedTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextField1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jFormattedTextField1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jSpinner1, jSpinner2, jSpinner3});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {infoLabel, jButton1});

        jPanel4.setOpaque(false);

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/jmonitoring/icons/delete.png"))); // NOI18N
        deleteButton.setToolTipText(bundle.getString("ManualEntryPanel.deleteButton.toolTipText")); // NOI18N
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
    ManualEntryDialog dialog = (ManualEntryDialog) this.getTopLevelAncestor();
    dialog.getSelection();
    dialog.removeFromHashMap(dialog.getSelection(), this);

    int height = this.getHeight();
    final JPanel entryPanelHolder = (JPanel) this.getParent();
    final JScrollPane sp = (JScrollPane) entryPanelHolder.getParent().getParent();
    entryPanelHolder.remove(this);

    if (entryPanelHolder.getComponentCount() * (height + 3) > sp.getVerticalScrollBar().getModel().getExtent()) {
        entryPanelHolder.setPreferredSize(new Dimension(entryPanelHolder.getWidth(), entryPanelHolder.getComponentCount() * (height + 3)));
    }
    entryPanelHolder.setForeground(Color.BLUE);

    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            entryPanelHolder.setForeground(Color.BLACK);
            sp.revalidate();
            if (sp.getVerticalScrollBar().getModel().getMaximum() > 430) {   // TODO Allgemeiner anpassen
                sp.getVerticalScrollBar().setValue(sp.getVerticalScrollBar().getModel().getMaximum());
            } else {
                sp.getVerticalScrollBar().setValue(0);
            }
        }
    });
}//GEN-LAST:event_deleteButtonActionPerformed

private void jFormattedTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField1KeyReleased
    reactToValueChange();
}//GEN-LAST:event_jFormattedTextField1KeyReleased

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    DecimalFormat fmt = new DecimalFormat("#.####");
    jFormattedTextField1.setText(fmt.format(minimumValidEntry));
    jFormattedTextField1.firePropertyChange("value", minimumValidEntry, 0.0);
}//GEN-LAST:event_jButton1ActionPerformed

private void jFormattedTextField1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField1PropertyChange
    if (evt.getPropertyName().equals("value")) {
        reactToValueChange();
    }
}//GEN-LAST:event_jFormattedTextField1PropertyChange

private void dateChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateChooserPropertyChange
    if (evt.getPropertyName().equals("date")) {
        reactToDateChange(dateChooser.getDate());
    }
}//GEN-LAST:event_dateChooserPropertyChange

    private void reactToDateChange(Date newDate) {
        DecimalFormat df = new DecimalFormat("#.####");
        //letzen Wert vor dem aktuellen Datum ermitteln
        DataHandler dh = new DataHandler(sensorID);


        Measurement prevMeasurment = dh.getPreviousDBEntry(null, newDate);
        if (prevMeasurment == null) {
            setInfoLabel(java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle").getString("ManualEntryPanel.NOVALUE"));
            setMinimumValidEntry(0f);
        } else {
            Date date = new Date(prevMeasurment.getTime());
            double value = prevMeasurment.getValue();
            setInfoLabel(java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle").getString("ManualEntryPanel.LASTVALUEFOR") + " " + new SimpleDateFormat(MoniSoftConstants.HumanDateTimeFormat).format(date) + ": " + df.format(value) + " [" + SensorInformation.getSensorProperties(sensorID).getSensorUnit() + "]");
            setMinimumValidEntry(value);
        }
    }

    private void reactToValueChange() {
        String s = jFormattedTextField1.getText();
        int compare;
        boolean isValid = s.matches("\\d+([\\.,]\\d+)?");
        if (!isValid) {
            jFormattedTextField1.setBackground(errorColor);
            jFormattedTextField1.setBorder(redLine);
            isValueValid = false;
        } else {
            s = s.replace(",", ".");
            compare = Double.compare(Double.parseDouble(s), minimumValidEntry);
            if (compare >= 0) {             // ist der Wert grösser oder gleich dem letzten?
                jFormattedTextField1.setBackground(Color.WHITE);
                jFormattedTextField1.setBorder(greyLine);
                isValueValid = true;
            } else {
                jFormattedTextField1.setBackground(errorColor);
                jFormattedTextField1.setBorder(redLine);
                isValueValid = false;
            }
        }
        updateBGColor();
    }

    public double getValue() {
        String f = jFormattedTextField1.getText();
        f = f.replace(",", ".");
        return Double.valueOf(f);
    }

    public Date getDate() {
        String h = jSpinner1.getValue().toString();
        String m = jSpinner2.getValue().toString();
        String s = jSpinner3.getValue().toString();
        if (h.length() == 1) {
            h = "0" + h;
        }
        if (m.length() == 1) {
            m = "0" + m;
        }
        if (s.length() == 1) {
            s = "0" + s;
        }

        String dateOnly = new SimpleDateFormat(MoniSoftConstants.MySQLDateFormat).format(dateChooser.getDate());

        try {
            return new SimpleDateFormat(MoniSoftConstants.MySQLDateTimeFormat).parse(dateOnly + " " + h + ":" + m + ":" + s);
        } catch (ParseException ex) {
            Messages.showException(ex);
        }
        return null;
    }

    public void reactToDateChange(boolean isValid) {
        isDateValid = isValid;
        updateBGColor();
    }

    public boolean hasValidEntrys() {
        if (isValueValid && isDateValid) {
            return true;
        } else {
            return false;
        }
    }

    public void setInfoLabel(String string) {
        infoLabel.setText(string);
    }

    public void setMinimumValidEntry(double f) {
        minimumValidEntry = f;
    }

    private void updateBGColor() {
        if (isValueValid && isDateValid) {
            this.setBackground(paneOKColor);
        } else {
            this.setBackground(paneErrorColor);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    // End of variables declaration//GEN-END:variables
}
