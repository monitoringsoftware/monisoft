package de.jmonitoring.DataHandling.FactorChange;

import de.jmonitoring.base.Messages;
import de.jmonitoring.base.MoniSoft;
import de.jmonitoring.base.MoniSoftConstants;
import de.jmonitoring.base.sensors.SensorInformation;
import de.jmonitoring.base.sensors.SensorProperties;
import de.jmonitoring.help.ManualBookmarks;
import de.jmonitoring.help.ManualViewer;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * This dialog enables the user to manipulate factor chnages for all sensors
 *
 * @author togro
 */
public class FactorChangeDialog extends javax.swing.JDialog {

    private ArrayList<SensorProperties> sensorList;

    /**
     * Creates new form FactorChangeDialog
     *
     * @param parent The parnet that calls us
     * @param modal The modality type
     * @param list The list of all sensors
     */
    public FactorChangeDialog(java.awt.Frame parent, boolean modal, ArrayList<SensorProperties> list) {
        super(parent, modal);
        initComponents();
        jDateChooser2.getJCalendar().setTodayButtonVisible(true);
        sensorList = list;
        SensorProperties props;
        for (Iterator<SensorProperties> it = sensorList.iterator(); it.hasNext();) {
            props = it.next();
            if (!MoniSoftConstants.NO_SENSOR_SELECTED.equals(props.getSensorName())) { // wenn es nicht der Platzhalter (<keine>) ist...
                factorChangeSensorSelector.addItem(props);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel18 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        factorChangeSensorSelector = new javax.swing.JComboBox();
        jLabel73 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel21 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel69 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jSpinner4 = new javax.swing.JSpinner();
        jLabel71 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jSpinner5 = new javax.swing.JSpinner();
        closeButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel18.setBackground(new java.awt.Color(0, 102, 204));
        jPanel18.setPreferredSize(new java.awt.Dimension(100, 40));

        jLabel68.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(255, 255, 255));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/jmonitoring/DataHandling/FactorChange/Bundle"); // NOI18N
        jLabel68.setText(bundle.getString("FactorChangeDialog.jLabel68.text")); // NOI18N

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/jmonitoring/icons/question-frame.png"))); // NOI18N
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setFocusPainted(false);
        jButton7.setIconTextGap(0);
        jButton7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7help(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 391, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addContainerGap())
        );

        jPanel20.setMaximumSize(new java.awt.Dimension(0, 0));
        jPanel20.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel20.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel20.setLayout(new java.awt.BorderLayout());

        jPanel22.setMinimumSize(new java.awt.Dimension(560, 290));
        jPanel22.setPreferredSize(new java.awt.Dimension(530, 200));

        factorChangeSensorSelector.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        factorChangeSensorSelector.setMaximumRowCount(25);
        factorChangeSensorSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorChangeSensorSelectorActionPerformed(evt);
            }
        });

        jLabel73.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel73.setText(bundle.getString("FactorChangeDialog.jLabel73.text")); // NOI18N

        jList1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jList1.setModel(new DefaultListModel());
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jList1);

        jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel72.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel72.setText(bundle.getString("FactorChangeDialog.jLabel72.text")); // NOI18N

        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle"); // NOI18N
        jDateChooser2.setDateFormatString(bundle1.getString("DatePanel.DateFormatString")); // NOI18N

        jLabel69.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel69.setText(bundle.getString("FactorChangeDialog.jLabel69.text")); // NOI18N

        jSpinner3.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner3.setAlignmentX(0.0F);

        jSpinner4.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner4.setAlignmentX(0.0F);

        jLabel71.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel71.setText(bundle.getString("FactorChangeDialog.jLabel71.text")); // NOI18N

        jSpinner5.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner5.setAlignmentX(0.0F);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel71)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField11))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel72)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel69)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 193, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel72)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel69)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 93, Short.MAX_VALUE))
        );

        closeButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/jmonitoring/icons/cancel.png"))); // NOI18N
        closeButton.setText(bundle.getString("FactorChangeDialog.closeButton.text")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        addButton.setText(bundle.getString("FactorChangeDialog.addButton.text")); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        removeButton.setText(bundle.getString("FactorChangeDialog.removeButton.text")); // NOI18N
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel73, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(factorChangeSensorSelector, javax.swing.GroupLayout.Alignment.LEADING, 0, 507, Short.MAX_VALUE)
                    .addComponent(closeButton)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(195, 195, 195))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel73)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(factorChangeSensorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, 0, 0, Short.MAX_VALUE)
                            .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton)
                .addGap(134, 134, 134))
        );

        jPanel20.add(jPanel22, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 234, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void factorChangeSensorSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorChangeSensorSelectorActionPerformed
    if (MoniSoft.getInstance().isGUIActive()) {
        updateFactorModel((SensorProperties) factorChangeSensorSelector.getSelectedItem()); // Model entsprechend belegen
    }
}//GEN-LAST:event_factorChangeSensorSelectorActionPerformed

private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
    dispose();
}//GEN-LAST:event_closeButtonActionPerformed

    /**
     * Neuen Eintrag in die Faktorenliste übernehmen.
     *
     * @param evt
     */
private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
    SimpleDateFormat HumanDateFormat = new SimpleDateFormat(MoniSoftConstants.HumanDateFormat);
//    ArrayList<String> candidateList = new ArrayList<String>();

    if (jDateChooser2.getDate() == null) {
        return;
    }
    if (jTextField11.getText().isEmpty()) {
        return;
    }
    String factorString = jTextField11.getText();
    factorString = factorString.replace(",", ".");
    double factor;
    try {
        factor = Double.parseDouble(factorString);
    } catch (NumberFormatException e) {
        Messages.showException(e);
        jTextField11.setText("");
        return;
    }
    String date = HumanDateFormat.format(jDateChooser2.getDate());
    String h = jSpinner3.getValue().toString();
    String m = jSpinner4.getValue().toString();
    String s = jSpinner5.getValue().toString();
    if (h.length() == 1) {
        h = "0" + h;
    }
    if (m.length() == 1) {
        m = "0" + m;
    }
    if (s.length() == 1) {
        s = "0" + s;
    }
    String entry = date + " " + h + ":" + m + ":" + s + ", " + factor;
//    DefaultListModel model = (DefaultListModel) jList1.getModel();
//    candidateList.add(entry);
//    model.addElement(entry);
//    jList1.setModel(model);
    removeButton.setEnabled(true);
    // Daten in DB updaten lassen
//    performFactorUpdate(((SensorProperties) factorChangeSensorSelector.getSelectedItem()).getSensorIDFromNameORKey());
    updateFactor(((SensorProperties) factorChangeSensorSelector.getSelectedItem()).getSensorID(), entry);
}//GEN-LAST:event_addButtonActionPerformed

    /**
     * Löschen eines Eintrags im FactorListModel
     *
     * @param evt
     */
private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
    SimpleDateFormat humanDateTimeFormat = new SimpleDateFormat(MoniSoftConstants.HumanDateTimeFormat);
    DefaultListModel model = (DefaultListModel) jList1.getModel();

    if (jList1.getSelectedIndex() == -1) {
        return; // Wenn nichts ausgewählt ist beenden
    }
    String entry = (String) model.getElementAt(jList1.getSelectedIndex());
    String dateString = entry.substring(0, 19);

    Date time = null;
    try {
        time = humanDateTimeFormat.parse(dateString);
    } catch (ParseException ex) {
        Messages.showException(ex);
        Messages.showException(ex);
    }

    model.removeElement(jList1.getSelectedValue());
    String d = entry.substring(0, 10);
    String h = entry.substring(11, 13);
    String m = entry.substring(14, 16);
    String s = entry.substring(17, 19);
    String v = entry.substring(20);
    String dateTime = entry.substring(0, 19);
    jSpinner3.setValue(Integer.parseInt(h));
    jSpinner4.setValue(Integer.parseInt(m));
    jSpinner5.setValue(Integer.parseInt(s));
    jTextField11.setText(v);
    try {
        jDateChooser2.setDate(humanDateTimeFormat.parse(dateTime));
    } catch (ParseException ex) {
        Messages.showException(ex);
    }
    if (model.isEmpty()) {
        removeButton.setEnabled(false);
    }
    // Daten in DB updaten lassen
    FactorHandler fh = new FactorHandler(((SensorProperties) factorChangeSensorSelector.getSelectedItem()).getSensorID());
    fh.removeFactor(time);
}//GEN-LAST:event_removeButtonActionPerformed

    private void jButton7help(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7help
        if (!ManualViewer.isShown) {
            ManualViewer viewer = new ManualViewer();
            viewer.showManual();
        }
        ManualViewer.goToPage(ManualBookmarks.FACTOR_CHANGE.getPage());
    }//GEN-LAST:event_jButton7help

    private boolean updateFactor(int sensorID, String entryCandidate) {
        FactorHandler fh = new FactorHandler(sensorID);
        boolean addToList = true;
        String dateCandidate = entryCandidate.substring(0, 19);
        String factorCandidate = entryCandidate.substring(20, entryCandidate.length());
        DefaultListModel model = (DefaultListModel) jList1.getModel();
        String entry, dateString, factorString;
        SimpleDateFormat df = new SimpleDateFormat(MoniSoftConstants.HumanDateTimeFormat);
        ArrayList<String> removeList = new ArrayList<String>();

        for (int i = 0; i < model.getSize(); i++) { // entsprechendes Element im model suchen
            entry = (String) model.get(i);
            dateString = entry.substring(0, 19);
            factorString = entry.substring(20, entry.length());

            if (dateCandidate.equals(dateString)) { // es gibt bereits einen Eintrag für diese Zeit
                if (JOptionPane.showConfirmDialog(null, java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle").getString("FactorChangeDialog.FORTIMESTAMP") + " " + dateString + " " + java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle").getString("FactorChangeDialog.FACTOREXISTS") + " " + factorString + " " + java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle").getString("FactorChangeDialog.DEFINED") + "\n\n" + java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle").getString("FactorChangeDialog.OVERWRITE"), java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle").getString("FactorChangeDialog.QUESTION"), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    removeList.add(entry);
                } else {
                    addToList = false;
                }
            }
        }

        if (addToList) {
            try {
                fh.addOrUpdateFactor(df.parse(dateCandidate), Double.parseDouble(factorCandidate), true);
                model.addElement(entryCandidate);
            } catch (ParseException ex) {
                Messages.showException(ex);
                Messages.showException(ex);
            }
        }

        Iterator it = removeList.iterator();
        while (it.hasNext()) {
            model.removeElement(it.next());
        }

        return addToList;
    }

    /**
     * Update the list model according to the given sensor
     *
     * @param props The sensor properties
     */
    private void updateFactorModel(SensorProperties props) {
        ArrayList<String> entrys = SensorInformation.getFactorListEntrys(props.getSensorID());
        DefaultListModel model = new DefaultListModel();
        Iterator it = entrys.iterator();
        while (it.hasNext()) {
            model.addElement(it.next());
        }
        jList1.setModel(model);

        if (model.isEmpty()) {
            removeButton.setEnabled(false);
        } else {
            removeButton.setEnabled(true);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton closeButton;
    static javax.swing.JComboBox factorChangeSensorSelector;
    private javax.swing.JButton jButton7;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables
}
