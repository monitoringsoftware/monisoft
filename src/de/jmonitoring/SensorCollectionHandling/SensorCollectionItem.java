/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */

/*
 * ConsumptionCategoryItem.java
 *
 * Created on 14.09.2010, 15:04:38
 */
package de.jmonitoring.SensorCollectionHandling;

import de.jmonitoring.base.sensors.SensorProperties;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author togro
 */
public class SensorCollectionItem extends javax.swing.JPanel {

    private SensorProperties props;

    /**
     * Creates new form ConsumptionCategoryItem
     */
    public SensorCollectionItem(SensorProperties p, boolean showBuilding) {
        props = p;
        initComponents();
        String building = "";

        if (showBuilding) {
            if (props.getBuildingName() != null) {
                building = props.getBuildingName() + ": ";
            }
        }

        jLabel1.setText("<html><body><div style=\"width:250px;\"><b>" + building + "</b>" + props.getSensorName() + "\u2015" + props.getSensorDescription() +"</div></body></html>");
        setToolTipText("<html><body><b>" + props.getSensorName() + "</b> [" + props.getSensorUnit() + "]<br>" + props.getSensorDescription() + "<br>" + java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle").getString("SensorCollectionItem.BUILDING") + " " + props.getBuildingName() + " </body></html>");
        addMouseListener(new MouseAdapter() {

            @Override
            public void mouseEntered(MouseEvent e) {
                setBackground(Color.LIGHT_GRAY);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                setBackground(new Color(238, 238, 238));
            }
        });
    }

    public SensorProperties getProps() {
        return props;
    }

    public void setProps(SensorProperties props) {
        this.props = props;
    }

    public String getLabelText() {
        return jLabel1.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        setMaximumSize(new java.awt.Dimension(32767, 30));
        setMinimumSize(new java.awt.Dimension(0, 25));
        setPreferredSize(new java.awt.Dimension(397, 25));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel1.setText("to be replaced");
        jLabel1.setMaximumSize(new java.awt.Dimension(394, 30));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/jmonitoring/icons/cross.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setPreferredSize(new java.awt.Dimension(20, 20));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // LÃ¶schen des Messpunkts aus der Liste
        ((SensorCollectionPanel) getParent().getParent()).removeSensor(props); // Aus dem Comparevalue nehmen
        ((SensorCollectionPanel) getParent().getParent()).removeItem((SensorCollectionItem) this); // Komponente entfernen
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
