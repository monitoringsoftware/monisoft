/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CarpetSensorChooserPanel.java
 *
 * Created on 14.12.2009, 17:54:50
 */
package de.jmonitoring.standardPlots.carpetPlot;

import de.jmonitoring.base.buildings.BuildingInformation;
import de.jmonitoring.base.MoniSoft;
import de.jmonitoring.base.MoniSoftConstants;
import de.jmonitoring.base.sensors.SensorProperties;
import de.jmonitoring.References.ReferenceValue;
import de.jmonitoring.utils.DnDListener.SensorSelectorDropListener;
import java.awt.dnd.DropTarget;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;

/**
 *
 * @author togro
 */
public class CarpetSensorChooserPanel extends javax.swing.JPanel {

    /**
     * Creates new form CarpetSensorChooserPanel
     */
    public CarpetSensorChooserPanel() {
        initComponents();
        timeReferenceSelector.setModel(getReferenceSelectorModel());
    }

    public JComboBox getSensorSelector() {
        return sensorSelector;
    }

    public boolean isUsePower() {
        return powerCheck.isSelected();
    }

    public void setUsePower(boolean b) {
        powerCheck.setSelected(b);
    }

    public JTextField getScaleMinTextField() {
        return scaleMin;
    }

    public JTextField getScaleMaxTextField() {
        return scaleMax;
    }

    public JComboBox getReferenceSelector() {
        return referenceSelector;
    }

    public JComboBox getAggregationComboBox() {
        return aggSelector;
    }

    public JComboBox getTimeReferenceSelector() {
        return timeReferenceSelector;
    }

    private DefaultComboBoxModel getReferenceSelectorModel() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement(java.util.ResourceBundle.getBundle("de/jmonitoring/base/Bundle").getString("<KEINE>"));//NO18N
        model.addElement(java.util.ResourceBundle.getBundle("de/jmonitoring/base/Bundle").getString("YEAR"));//NO18N
        model.addElement(java.util.ResourceBundle.getBundle("de/jmonitoring/base/Bundle").getString("QUARTER"));//NO18N
        model.addElement(java.util.ResourceBundle.getBundle("de/jmonitoring/base/Bundle").getString("MONTH"));//NO18N
        model.addElement(java.util.ResourceBundle.getBundle("de/jmonitoring/base/Bundle").getString("WEEK"));//NO18N
        model.addElement(java.util.ResourceBundle.getBundle("de/jmonitoring/base/Bundle").getString("DAY"));//NO18N
        model.addElement(java.util.ResourceBundle.getBundle("de/jmonitoring/base/Bundle").getString("HOUR"));//NO18N
        return model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel22 = new javax.swing.JLabel();
        sensorSelector = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        aggSelector = new javax.swing.JComboBox();
        powerCheck = new javax.swing.JCheckBox();
        scaleMin = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        scaleMax = new javax.swing.JTextField();
        referenceSelector = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        timeReferenceSelector = new javax.swing.JComboBox();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/jmonitoring/Components/Bundle"); // NOI18N
        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), bundle.getString("CarpetSensorChooserPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 9))); // NOI18N
        setMinimumSize(new java.awt.Dimension(467, 150));
        setPreferredSize(new java.awt.Dimension(467, 150));

        jLabel22.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("de/jmonitoring/standardPlots/carpetPlot/Bundle"); // NOI18N
        jLabel22.setText(bundle1.getString("CarpetSensorChooserPanel.jLabel22.text")); // NOI18N

        sensorSelector.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        sensorSelector.setMaximumRowCount(20);
        sensorSelector.setMinimumSize(new java.awt.Dimension(126, 17));
        sensorSelector.setPreferredSize(new java.awt.Dimension(126, 17));
        sensorSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SensorSelectorTouched(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        jLabel23.setText(bundle1.getString("CarpetSensorChooserPanel.jLabel23.text")); // NOI18N

        aggSelector.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        aggSelector.setMaximumRowCount(15);
        aggSelector.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Originalmesswerte", "Stundenwerte" }));
        aggSelector.setMinimumSize(new java.awt.Dimension(126, 17));
        aggSelector.setPreferredSize(new java.awt.Dimension(126, 17));

        powerCheck.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        powerCheck.setText(bundle1.getString("CarpetSensorChooserPanel.powerCheck.text")); // NOI18N
        powerCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        powerCheck.setEnabled(false);
        powerCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));

        scaleMin.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        jLabel24.setText(bundle1.getString("CarpetSensorChooserPanel.jLabel24.text")); // NOI18N

        jLabel25.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        jLabel25.setText(bundle1.getString("CarpetSensorChooserPanel.jLabel25.text")); // NOI18N

        scaleMax.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N

        referenceSelector.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        referenceSelector.setMaximumRowCount(15);
        referenceSelector.setMinimumSize(new java.awt.Dimension(126, 17));
        referenceSelector.setPreferredSize(new java.awt.Dimension(126, 17));

        jLabel33.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        jLabel33.setText(bundle1.getString("CarpetSensorChooserPanel.jLabel33.text")); // NOI18N

        timeReferenceSelector.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        timeReferenceSelector.setMaximumRowCount(15);
        timeReferenceSelector.setMinimumSize(new java.awt.Dimension(126, 17));
        timeReferenceSelector.setPreferredSize(new java.awt.Dimension(126, 17));

        DropTarget dt_CP_SensorSelector = new DropTarget(sensorSelector,new SensorSelectorDropListener());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(aggSelector, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scaleMax, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scaleMin, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addComponent(powerCheck))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(referenceSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timeReferenceSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(sensorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sensorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(aggSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(powerCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(scaleMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(scaleMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(referenceSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(timeReferenceSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SensorSelectorTouched(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SensorSelectorTouched
        if (!MoniSoft.getInstance().isGUIActive()) {
            return;
        }

        SensorProperties props = (SensorProperties) sensorSelector.getSelectedItem();
        if (props != null && !props.getSensorName().equals(MoniSoftConstants.NO_SENSOR_SELECTED) && (props.isCounter() || props.isUsage())) {
            powerCheck.setEnabled(true);
        } else {
            powerCheck.setEnabled(false);
            powerCheck.setSelected(false);
        }

        if (props.getBuildingID() != null) {
            DefaultComboBoxModel m = (DefaultComboBoxModel) referenceSelector.getModel();
            m.removeAllElements();
            m.addElement(MoniSoftConstants.NO_SENSOR_SELECTED);
            for (ReferenceValue ref : BuildingInformation.getBuildingReferences(props.getBuildingID())) {
                m.addElement(ref);
            }
        }
}//GEN-LAST:event_SensorSelectorTouched
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox aggSelector;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JCheckBox powerCheck;
    private javax.swing.JComboBox referenceSelector;
    private javax.swing.JTextField scaleMax;
    private javax.swing.JTextField scaleMin;
    private javax.swing.JComboBox sensorSelector;
    private javax.swing.JComboBox timeReferenceSelector;
    // End of variables declaration//GEN-END:variables
}
