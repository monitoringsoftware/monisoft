package de.jmonitoring.References;

import de.jmonitoring.Components.BuildingEditorDialog;
import java.awt.Component;
import java.util.ArrayList;

/**
 *
 * @author togro
 */
public class ReferenceItemHolder extends javax.swing.JPanel {

    private final BuildingEditorDialog caller;

    /**
     * Create a new {@link ReferenceItemHolder}
     *
     * @param editable Determine if this dialog is view only or editable
     * @param caller The calling {@link BuildingEditorDialog}
     */
    public ReferenceItemHolder(boolean editable, BuildingEditorDialog caller) {
        this.caller = caller;
        initComponents();
    }

    /**
     * Adds a new {@link ReferenceValue} or updates it
     *
     * @param reference The new {@link ReferenceValue}
     */
    public void addReference(ReferenceValue reference) {
        for (Component c : getComponents()) {
            if (c instanceof ReferenceItem) {
                if (((ReferenceItem) c).getReference().getName().equals(reference.getName())) { // Diese Bezugsgröße existiert schon
                    remove(c); // Dann vor dem hinzufügen die alte entfernen
                }
            }
        }
        add(new ReferenceItem(reference, this.caller)); // Bezugsgröße hinzufügen
    }

    /**
     * Deletes the given {@link ReferenceItem}
     *
     * @param item Th eitem to be deleted
     */
    public void removeReference(ReferenceItem item) {
        remove(item);
        this.caller.updateScrollPane(BuildingEditorDialog.LEAVE);
    }

    /**
     * Get all {@link ReferenceValue} that this holder contains
     *
     * @return A list of all included {@link ReferenceValue}s
     */
    public ArrayList<ReferenceValue> getIncludedReferences() {
        ArrayList<ReferenceValue> list = new ArrayList<ReferenceValue>();
        for (Component c : getComponents()) {
            if (c instanceof ReferenceItem) {
                list.add(((ReferenceItem) c).getReference());
            }
        }
        return list;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 204));
        setMinimumSize(new java.awt.Dimension(400, 150));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
